plugins {
    id 'java'
    id 'application'
}

group 'example.com'
version '0.0.1-ALPHA'
mainClassName = 'ch.unibas.cs.p9.fs19.example.HelloWorld'

//specifies source compatibility to Java 11
sourceCompatibility = 1.11

//adds maven central & jcenter as repositories to search for libraries
repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    // EXAMPLE: LOGGING
    /*
    The following adds the logging framework Apache Log4J2.
    The statements serve as an example on how to use libraries.
    Since these are `implementation` dependencies, they are packed in the final jar.
    Read the documentation at https://docs.gradle.org/current/userguide/declaring_dependencies.html to learn more.
    Additionally, we will discuss log4j in one of the exercise slots.
     */
    //implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.+'
    //implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.+'

    // JUNIT
    /*
    The following dependency is required to perform JUnit tests, for example the HelloWorldTest.
    Since it is a `testCompile` dependency, it will not be part of the final product, only during testing.
     */
    testImplementation group: 'junit', name: 'junit', version: '4.+'
}

/*
The following block adds both compile and runtime dependencies to the jar
 */
jar {
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
	attributes 'Main-Class': mainClassName
    }
}
